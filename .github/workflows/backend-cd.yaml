name: 'Backend CD'
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "starter/backend"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install pytest --dev
          pipenv install --dev

      - name: Run lint check
        run: pipenv run lint

      - name: Run tests
        run: pipenv run test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: ECR Login
        uses: aws-actions/amazon-ecr-login@v4
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Build Docker image
        run: |
          docker build -t backend .

      - name: Tag Docker Image
        run: |
          docker tag backend:latest ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:latest

      - name: Kubeconfig Login
        run: |
          aws eks update-kubeconfig --name cluster --region ${{ vars.AWS_DEFAULT_REGION }}
          kubectl config current-context
          kubectl get nodes

      - name: Deploy to Kubernetes
        run: |
          cd ./k8s
          kustomize edit set image backend=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:latest
          kustomize build | kubectl apply -f -
