name: 'Frontend CD'
on:
  workflow_dispatch:

  push:
    branches:
      - main
    paths:
      - "starter/frontend/**"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Restore dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Install prettier
        run: |
          npm install prettier@2.8.8 --save-dev

      - name: Run lint check
        run: npm run lint

      - name: Run test
        run: npm run test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: ECR Login
        uses: aws-actions/amazon-ecr-login@v2
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Build Docker image
        run: |
          docker build -t frontend --build-arg=REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }} .

      - name: Tag Docker Image
        run: |
          docker tag frontend:latest ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:latest

      - name: Kubeconfig Login
        run: |
          aws eks update-kubeconfig --name cluster --region ${{ vars.AWS_DEFAULT_REGION }}

      - name: Deploy to Kubernetes
        run: |
          cd ./k8s
          kustomize edit set image frontend=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:latest
          kustomize build | kubectl apply -f -




